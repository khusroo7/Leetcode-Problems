class Solution {
    public int longestMonotonicSubarray(int[] nums) {
        int maxLength=0;

        // Find longest strictly increasing subarray
        for(int i=0;i<nums.length;i++){
            int currLength=1;
            for(int j=i+1;j<nums.length;j++){
                // Extend subarray if next element is larger
                if(nums[j]>nums[j-1]){
                    currLength++;
                }else{
                    break;  // Break if sequence is not increasing anymore
                }
            }
            maxLength=Math.max(currLength,maxLength);
        }
        
        // Find longest strictly decreasing subarray
        for(int i=0;i<nums.length;i++){
            int currLength=1;
            for(int j=i+1;j<nums.length;j++){
                // Extend subarray if next element is smaller
                if(nums[j]<nums[j-1]){
                    currLength++;
                }else{
                    break;  // Break if sequence is not decreasing anymore
                }
            }
            maxLength=Math.max(currLength,maxLength);
        }
        return maxLength;   // Return the longer of increasing or decreasing sequences
    }
}
