public class Solution {
    public int findMinDifference(List<String> timePoints) {
        // Convert all time points to minutes
        List<Integer> minutes = new ArrayList<>();
        for (String time : timePoints) {
            String[] parts = time.split(":");
            int hours = Integer.parseInt(parts[0]);
            int mins = Integer.parseInt(parts[1]);
            minutes.add(hours * 60 + mins);
        }
        
        // Sort the list of minutes
        Collections.sort(minutes);
        
        int minDifference = Integer.MAX_VALUE;
        // Calculate the minimum difference between consecutive times
        for (int i = 1; i < minutes.size(); i++) {
            minDifference = Math.min(minDifference, minutes.get(i) - minutes.get(i - 1));
        }

        // Also check the difference between the last and first time points (circular time)
        int circularDifference = 1440 - minutes.get(minutes.size() - 1) + minutes.get(0);
        minDifference = Math.min(minDifference, circularDifference);

        return minDifference;
    }
}
