class Solution {
    // Helper function to calculate the GCD of two integers
    private int gcd(int a, int b) {
        if (b == 0) return a;
        return gcd(b, a % b);
    }
    // Function to insert GCD nodes between adjacent nodes
    public ListNode insertGreatestCommonDivisors(ListNode head) {
        if(head==null || head.next==null) return head;
        ListNode prev=head; // Pointer to the previous node
        ListNode curr=head.next; // Pointer to the current node
        while(curr!=null){
            int gcdValue=gcd(prev.val, curr.val); // Calculate the GCD between the values of prev and curr
            // Create a new node with the GCD value
            ListNode gcdNode = new ListNode(gcdValue);
            // Insert the GCD node between prev and curr
            prev.next=gcdNode;
            gcdNode.next=curr;
            // Move the pointers forward
            prev=curr;
            curr=curr.next;
        }
        return head;
    }
}
